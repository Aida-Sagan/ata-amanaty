import { NextResponse } from "next/server";
import jwt from "jsonwebtoken";

// –ü—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã (–ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ)
const admins = [
    { username: "admin1", password: "admin123" },
    { username: "admin2", password: "admin456" },
    { username: "admin3", password: "admin789" },
    { username: "admin4", password: "admin999" },
    { username: "admin5", password: "admin555" },
    { username: "admin6", password: "admin777" },
];

// –ü–æ–ª—É—á–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const JWT_SECRET = process.env.JWT_SECRET || "mysecretkey"; // –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –∑–∞–¥–∞–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º "mysecretkey"

export async function POST(req: Request) {
    try {
        const { username, password } = await req.json();
        console.log("–õ–æ–≥–∏–Ω:", username);
        console.log("–ü–∞—Ä–æ–ª—å:", password);

        // –ò—â–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ –ª–æ–≥–∏–Ω—É –∏ –ø–∞—Ä–æ–ª—é
        const admin = admins.find((user) => user.username === username && user.password === password);
        if (!admin) {
            console.log("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!");
            return NextResponse.json({ success: false, message: "–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ" }, { status: 401 });
        }

        console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥:", admin.username);

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º JWT-—Ç–æ–∫–µ–Ω
        const token = jwt.sign({ username }, JWT_SECRET, { expiresIn: "2h" });

        console.log("üéüÔ∏è –¢–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω:", token);

        return NextResponse.json({ success: true, token });
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", error);
        return NextResponse.json({ success: false, message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" }, { status: 500 });
    }
}
