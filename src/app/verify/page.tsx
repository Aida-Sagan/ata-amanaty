"use client";

import { useState, useEffect, useCallback } from "react";
import { useRouter } from "next/navigation";
import { TextField, Button, Container, Typography, Box, MenuItem, FormControl, InputLabel, Select, Checkbox, FormControlLabel } from "@mui/material";
import axios from "axios";
import Image from "next/image";

export default function VerifyPage() {
    const router = useRouter();
    const [loading, setLoading] = useState(false);
    const [requestData, setRequestData] = useState<any>(null);
    const [isLoadingData, setIsLoadingData] = useState(true); // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö

    // üìå –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏
    const fetchData = useCallback(async () => {
        const requestId = localStorage.getItem("requestId");
        if (!requestId) {
            router.push("/form");
            return;
        }

        try {
            const response = await axios.get(`/api/requests?id=${requestId}`);
            setRequestData(response.data.data);
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
            alert("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞—è–≤–∫—É.");
            router.push("/form");
        } finally {
            setIsLoadingData(false);
        }
    }, [router]);


    useEffect(() => {
        fetchData();
    }, [fetchData]);

    const handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
        setRequestData({
            ...requestData,
            [event.target.name]: event.target.value as string
        });
    };

    const handleSelectChange = (event: any) => {
        setRequestData({ ...requestData, [event.target.name]: event.target.value });
    };

    const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        setRequestData({ ...requestData, [event.target.name]: event.target.checked });
    };

    // üìå –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
    const handleUpdate = async () => {
        if (!requestData?._id) {
            alert("–û—à–∏–±–∫–∞: ID –∑–∞—è–≤–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.");
            return;
        }

        setLoading(true);
        try {
            await axios.put(`/api/requests`, {
                id: requestData._id,
                ...requestData, // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
            });

            router.push("/success-page");
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", error);
            alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏.");
        } finally {
            setLoading(false);
        }
    };

    if (isLoadingData) {
        return <Typography align="center">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</Typography>;
    }

    return (
        <Container maxWidth="md"
                   sx={{
                       flex: 1, // –ó–∞–Ω–∏–º–∞–µ—Ç –≤—Å—é –¥–æ—Å—Ç—É–ø–Ω—É—é —à–∏—Ä–∏–Ω—É, –Ω–æ –¥–µ–ª–∏—Ç—Å—è —Å –¥—Ä—É–≥–∏–º Box
                       border: "1px solid #c8d3e1", // –¶–≤–µ—Ç –≥—Ä–∞–Ω–∏—Ü—ã
                       padding: 3,
                       borderRadius: 2,
                       typography: "body1",
                       boxShadow: "5px 5px 15px rgba(0, 0, 0, 0.2)",
                       mb: '4rem',
                       mt: '2rem'
                   }}
        >
            <Box sx={{ display: "flex", justifyContent: "center" }}>
                <Image src="/logo.png" alt="Logo" width={200} height={110} />
            </Box>
            <Typography variant="h4" align="center" gutterBottom sx={{fontWeight: 'bold', color: '#756308'}}>
                –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞—è–≤–∫—É
            </Typography>
            <Box display="flex" flexDirection="column" gap={2}>
                <TextField label="–§–∞–º–∏–ª–∏—è" name="lastName" value={requestData.lastName} onChange={handleChange} fullWidth />
                <TextField label="–ò–º—è" name="firstName" value={requestData.firstName} onChange={handleChange} fullWidth />
                <TextField label="–û—Ç—á–µ—Å—Ç–≤–æ" name="middleName" value={requestData.middleName} onChange={handleChange} fullWidth />
                <TextField label="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è" type="date" name="birthDate" value={requestData.birthDate} onChange={handleChange} fullWidth />
                <TextField label="–ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è (–°—Ç—Ä–∞–Ω–∞, –û–±–ª–∞—Å—Ç—å)" name="birthPlaceCountryRegion" value={requestData.birthPlaceCountryRegion} onChange={handleChange} fullWidth />
                <TextField label="–ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è (–ì–æ—Ä–æ–¥, –†–∞–π–æ–Ω)" name="birthPlaceCity" value={requestData.birthPlaceCity} onChange={handleChange} fullWidth />
                <TextField label="–î–∞—Ç–∞ –ø—Ä–∏–∑—ã–≤–∞" type="month" name="conscriptionDate" value={requestData.conscriptionDate} onChange={handleChange} fullWidth />

                {/* –°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ */}
                <FormControl fullWidth>
                    <InputLabel>–°–µ–º–µ–π–Ω—ã–π —Å—Ç–∞—Ç—É—Å</InputLabel>
                    <Select name="maritalStatus" value={requestData.maritalStatus} onChange={handleSelectChange}>
                        <MenuItem value="married">–ñ–µ–Ω–∞—Ç / –ó–∞–º—É–∂–µ–º</MenuItem>
                        <MenuItem value="divorced">–†–∞–∑–≤–µ–¥–µ–Ω(-–∞)</MenuItem>
                        <MenuItem value="neverMarried">–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–æ—Å—Ç–æ—è–ª(-–∞) –≤ –±—Ä–∞–∫–µ</MenuItem>
                        <MenuItem value="widowWidower">–í–¥–æ–≤–∞ / –í–¥–æ–≤–µ—Ü</MenuItem>
                    </Select>
                </FormControl>

                <TextField label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π –∏ –∏—Ö –∏–º–µ–Ω–∞" name="childrenNames" value={requestData.childrenNames} onChange={handleChange} fullWidth />
                <TextField label="–†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–≥ —É–∫–∞–∑–∞—Ç—å" name="relativesListed" value={requestData.relativesListed} onChange={handleChange} fullWidth />

                {/* –ë—ã–≤—à–∏–π –≤ –ø–ª–µ–Ω—É */}
                <FormControlLabel
                    control={<Checkbox name="prisoner" checked={requestData.prisoner} onChange={handleCheckboxChange} />}
                    label="–ë—ã–ª –ª–∏ –≤ –ø–ª–µ–Ω—É?"
                />
                {requestData.prisoner && <TextField label="–ì–¥–µ –±—ã–ª –ø–ª–µ–Ω–µ–Ω?" name="prisonerInfo" value={requestData.prisonerInfo} onChange={handleChange} fullWidth />}

                {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
                <TextField label="–§–ò–û –∑–∞—è–≤–∏—Ç–µ–ª—è" name="searcherFullName" value={requestData.searcherFullName} onChange={handleChange} fullWidth />
                <TextField label="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞" name="phoneNumber" value={requestData.phoneNumber} onChange={handleChange} fullWidth />
                <TextField label="–î–æ–º–∞—à–Ω–∏–π –∞–¥—Ä–µ—Å" name="homeAddress" value={requestData.homeAddress} onChange={handleChange} fullWidth />
                <TextField label="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞" name="email" value={requestData.email} onChange={handleChange} fullWidth />

                {/* –û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—Å */}
                <FormControl fullWidth>
                    <InputLabel>–û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—Å?</InputLabel>
                    <Select name="heardAboutUs" value={requestData.heardAboutUs} onChange={handleSelectChange}>
                        <MenuItem value="Instagram">Instagram</MenuItem>
                        <MenuItem value="Facebook">Facebook</MenuItem>
                        <MenuItem value="TikTok">TikTok</MenuItem>
                        <MenuItem value="friends">–û—Ç –∑–Ω–∞–∫–æ–º—ã—Ö</MenuItem>
                        <MenuItem value="internetSearch">–ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ</MenuItem>
                        <MenuItem value="other">–î—Ä—É–≥–æ–µ</MenuItem>
                    </Select>
                </FormControl>
                {requestData.heardAboutUs === "other" && (
                    <TextField label="–£–∫–∞–∂–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫" name="heardAboutUsOther" value={requestData.heardAboutUsOther} onChange={handleChange} fullWidth />
                )}

                {/* –ö–Ω–æ–ø–∫–∞ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å" */}
                <Button variant="contained" color="primary" onClick={handleUpdate} disabled={loading}>
                    {loading ? "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..." : "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"}
                </Button>
            </Box>
        </Container>
    );
}
